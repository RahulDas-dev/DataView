import{u as t,a as e,b as a,g as n,P as r,d as i,j as s}from"./index-CKv5j3xT.js";import{r as o}from"./ui-components-BNBUoXTo.js";import"./react-vendor-Bf-MSPTJ.js";import"./danfojs-bY-Wo8g9.js";import"./plotly-Dxrw3P6A.js";const l=({columnName:l,maxCategories:c=30})=>{const d=o.useRef(null),{isDark:m}=t(),{dataFrame:u}=e();return o.useEffect((()=>{if(!d.current||!u||u.isEmpty||0==u.shape[0]||!l)return;const t=d.current;t.innerHTML="";const e=a(m),s=u[l].dropNa();if(0===s.values.length)return void(t.innerHTML='<div class="p-4 text-zinc-500 dark:text-zinc-400 font-mono text-sm">No valid categorical data to display</div>');const o=s.valueCounts().sortValues({ascending:!1}),f={},x=o.index.map((t=>String(t))),p=o.values,h=Math.min(x.length,c);for(let a=0;a<h;a++)f[x[a]]=p[a];const g=e.barGradient,v={x:x,y:p,type:"bar",marker:{color:p.map(((t,e)=>g[e%g.length])),line:{color:m?"rgba(255, 255, 255, 0.2)":"rgba(0, 0, 0, 0.2)",width:1}},hovertemplate:"<b>%{x}</b><br>Count: %{y}<extra></extra>"},j={...n(m,t.offsetWidth,"","Count"),xaxis:{...n(m,t.offsetWidth).xaxis,title:"",tickangle:-45,automargin:!0},margin:{l:50,r:10,t:40,b:x.length>10?120:80},bargap:.2,showlegend:!1},w=i(`countplot_${l}`),b=()=>{t&&r.relayout(t,{width:t.offsetWidth})},y=setTimeout((()=>{try{t&&(r.newPlot(t,[v],j,w),window.addEventListener("resize",b))}catch(e){t&&(t.innerHTML='<div class="p-4 text-zinc-500 dark:text-zinc-400 font-mono text-sm">Error rendering count plot</div>')}}),50);return()=>{if(clearTimeout(y),window.removeEventListener("resize",b),t)try{r.purge(t)}catch(e){}}}),[u,l,c,m]),s.jsx("div",{className:"w-full",children:s.jsx("div",{ref:d,className:"w-full h-[400px] min-h-[200px]","data-testid":"count-plot",children:s.jsx("div",{className:"h-full w-full flex items-center justify-center",children:s.jsx("div",{className:"animate-pulse text-zinc-400 font-mono text-sm",children:"Loading visualization..."})})})})};export{l as default};
